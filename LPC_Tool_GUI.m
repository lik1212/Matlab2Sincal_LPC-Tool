function LPC_Tool_GUI
% LPC_TOOL_GUI function opens a graphical user interface. With this GUI the
% user can set up all nessesary parameters for a Power Flow calculation
% with Sincal. The PFC is controlled and started with the Matlab function
% Mat2Sin_LPCalc(f)
%
% Author(s): P.Gassler, R. Brandalik ...

%% Check if GUI already opened

if ishandle(findobj('type','figure','Tag','LPC_Tool'))
%     figure(findobj('type','figure','Tag','LPC_Tool')) % TODO
%     return                                            % TODO
    close(figure(findobj('type','figure','Tag','LPC_Tool')))
end

%% Add subfunctions and static data path
addpath                  ([pwd,         '\Data\Subfunctions'  ]);        	% Add Subfunction path
addpath                  ([pwd,         '\Data\Static_Input\' ]);        	% Add path for static input (e.q. column names in a database)

%% Definition of global Settings
f = struct;
f.Inputs = struct;
f.Inputs.Data_Path              = [pwd,'\Data\'];
f.Inputs.Inputs_Path            = [pwd,'\Inputs\'];
f.Inputs.Outputs_Path           = [pwd,'\Outputs\'];
f.Inputs.Profiles_Path_static   = [f.Inputs.Inputs_Path,'Static_Profiles\'];
f.Inputs.LP_DB_Path            	= [f.Inputs.Inputs_Path,'Load_Profiles\'];    
f.Inputs.PV_DB_Path            	= [f.Inputs.Inputs_Path,'PV_Profiles\'];  
f.Inputs.LP_dist_path           = [f.Inputs.Inputs_Path,'Profiles_Distribution\']; 
f.Inputs.PV_dist_path           = [f.Inputs.Inputs_Path,'Profiles_Distribution\'];
f.Inputs.Grid_Path              = [f.Inputs.Inputs_Path,'Grids\']; 
% f.Inputs.Grid_Path = 'Z:\Gassler\7_Hiwi\Grids';
% f.Inputs.PV_dist_list_name      = 'DCInfeederNameOriginal.txt';
% f.Inputs.TimeSetup_First_Moment = datetime('01.01.2015 00:00:00','Format','dd.MM.yyyy HH:mm:ss');
% f.Inputs.TimeSetup_Last_Moment  = datetime('31.12.2015 23:50:00','Format','dd.MM.yyyy HH:mm:ss');
% f.Inputs.TimeSetup_First_Moment_PF = datetime('01.01.2015 00:00:00','Format','dd.MM.yyyy HH:mm:ss');          
% f.Inputs.TimeSetup_Last_Moment_PF = datetime('01.01.2015 00:00:00','Format','dd.MM.yyyy HH:mm:ss');
% f.Inputs.TimeSetup_Time_Step                = 10; % Minutes
% f.Inputs.TimeSetup_num_of_instants          = 52560;
% f.Inputs.TimeSetup_instants_per_grid_ratio  = 1; % Must be a number between 0 and 1
f.Inputs.Output_option_raw                  = false;
f.Inputs.Output_option_raw_only             = false;
f.Inputs.Output_option_del_temp_files       = true;
f.Inputs.Output_option_del_temp_files_begin = true;
f.Inputs.Output_option_preparation          = true;
f.Inputs.Output_option_per_node_branch      = true;
f.Inputs.Output_option_per_unit             = true;
f.Inputs.Output_option_U                    = true;
f.Inputs.Output_option_P                    = true;
f.Inputs.Output_option_Q                    = true;
f.Inputs.Output_option_S                    = true;
f.Inputs.Output_option_phi                  = true;
f.Inputs.Output_option_I                    = true;
f.Inputs.Output_option_P_flow               = true;
f.Inputs.Output_option_Q_flow               = true;
f.Inputs.Output_option_S_flow               = true;
f.Inputs.Output_option_T_vector             = true;
f.Inputs.Output_option_Sin_Info             = true;

%% Define constant font size
Fontsz = [...
    0.03,...    % UIpanel
    0.05,...
    0.20,...    % Button_groﬂ
    0.50,...    % Button_klein
    0.45,...    % popupmenu
    1.00,...    % ‹berschrift
    0.55...     % Beschriftung
    0.07...
    ]; 

%% Definition of Main Window
f.Main_Win.figure = ...
    figure( 'Name',             'LPC Tool'...
           ,'NumberTitle',      'off'...
           ,'Tag',              'LPC_Tool'...
           ,'Toolbar',          'none'...
           ,'MenuBar',          'none'...
           ,'Visible',          'on'...             % TODO
           ,'Resize',           'on'...
           ,'Color',            [0.9 0.9 0.9]...
           ,'Units',            'pixels'...
           ,'Position',         [493 300 1000 680]...
       );

f.Main_Win.text_Title = ...
    uicontrol(...
    'style',            'text',...
    'Units',            'normalized',...
    'Position',         [0.3 0.93 0.4 0.05],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',           'LPC Tool',...
    'FontUnits',        'normalized',...
    'FontSize',         Fontsz(6)...
    );

%% Input data panel
f.Main_Win.uipanel_input = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.01 0.01 0.48 0.9],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Input data',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'centertop'...
    );

%% Input data grid section panel
f.Main_Win.uipanel_input_grid = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.02 0.72 0.46 0.15],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Grid selection',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.popupmenu_grid_selection = ...
    uicontrol(f.Main_Win.uipanel_input_grid,...
    'style',            'popupmenu',...
    'Units',            'normalized',...
    'Position',         [0.02 0.05 0.96 0.45],...
    'String',           {'Select grid...'},...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'FontSize',         12....
    );

f.Main_Win.pushbutton_grid_path = ...
    uicontrol(f.Main_Win.uipanel_input_grid,...
    'style',        'pushbutton',...
    'Units',        'normalized',...
    'Position',     [0.02 0.55 0.3 0.3],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',       'Change Folder',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.text_grid_path = ...
    uicontrol(f.Main_Win.uipanel_input_grid,...
    'style',        'text',...
    'Units',        'normalized',...
    'Position',     [0.34 0.55 0.6 0.4],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',       f.Inputs.Grid_Path,...
    'FontUnits',    'pixels',...
    'FontSize',     10 ...
    );

%% Input data load profiles panel
f.Main_Win.uipanel_input_LP = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.02 0.43 0.46 0.28],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Load Profiles',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.uibuttongroup_input_LP_type = ...
    uibuttongroup(...
    'Units',            'normalized',...
    'Position',         [0.03 0.56 0.44 0.12],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select LP type',...
    'FontUnits',        'pixels',...
    'FontSize',         12,...
    'TitlePosition',    'centertop'...
    );

f.Main_Win.radiobutton_input_LP_DB = ...             
    uicontrol(f.Main_Win.uibuttongroup_input_LP_type,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.7 0.2 0.2],...    
    'String',       'Database',...
    'Enable',       'on',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_LP_LZR_Tool = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_type,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.22 0.7 0.2 0.2],...
    'String',       'LZR Tool',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_LP_AAPD = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_type,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.42 0.7 0.2 0.2],...
    'String',       'AAPD',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.pushbutton_DB_LP_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_type,...
    'style',            'pushbutton',...
    'Units',            'normalized',...
    'Position',         [0.02 0.1 0.28 0.35],...
    'String',           'Choose File',...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'on',...
    'FontSize',         12....
    );

f.Main_Win.edit_DB_LP_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_type,...
    'style',            'edit',...
    'Units',            'normalized',...
    'Position',         [0.32 0.1 0.66 0.35],...
    'String',           [f.Inputs.LP_DB_Path,'IEEE_Lo_Profiles.mat'],...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'on',...
    'FontSize',         12....
    );

f.Main_Win.uibuttongroup_input_LP_dist = ...
    uibuttongroup(...
    'Units',            'normalized',...
    'Position',         [0.03 0.44 0.44 0.12],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select LP distribution',...
    'FontUnits',        'pixels',...
    'FontSize',         12,...
    'TitlePosition',    'centertop'...
    );

f.Main_Win.radiobutton_input_dist_LP_list = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.7 0.3 0.2],...
    'String',       'Dist. List',...
    'FontUnits',    'pixels',...
    'FontSize',     12 ...
    );

f.Main_Win.radiobutton_input_dist_LP_random = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.22 0.7 0.3 0.2],...
    'String',       'Random',...
    'FontUnits',    'pixels',...
    'Value',        1, ... 
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_dist_LP_manual = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.42 0.7 0.3 0.2],...
    'String',       'Manual',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_dist_LP_sort = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.62 0.7 0.3 0.2],...
    'String',       'Alphabetic',...
    'Enable',       'on',...                % TODO
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_dist_LP_mean = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.82 0.7 0.3 0.2],...
    'String',       'Mean P',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.pushbutton_dist_list_LP_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',            'pushbutton',...
    'Units',            'normalized',...
    'Position',         [0.02 0.1 0.28 0.35],...
    'String',           'Choose File',...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'off',...
    'FontSize',         12....
    );

f.Main_Win.edit_dist_list_LP_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_LP_dist,...
    'style',            'edit',...
    'Units',            'normalized',...
    'Position',         [0.32 0.1 0.66 0.35],...
    'String',           f.Inputs.LP_dist_path,...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'off',...
    'FontSize',         12....
    );

%% Input data PV profiles panel
f.Main_Win.uipanel_input_PV = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.02 0.14 0.46 0.28],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'PV Profiles',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.uibuttongroup_input_PV_type = ...
    uibuttongroup(...
    'Units',            'normalized',...
    'Position',         [0.03 0.27 0.44 0.12],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select PV Profiles type',...
    'FontUnits',        'pixels',...
    'FontSize',         12,...
    'TitlePosition',    'centertop'...
    );

f.Main_Win.radiobutton_input_PV_DB = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_type,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.7 0.2 0.2],...
    'String',       'Database',...
    'Enable',       'on',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_PV_LZR_Tool = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_type,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.22 0.7 0.3 0.2],...
    'String',       'LZR Tool',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.pushbutton_DB_PV_path = ...                                      % TODO: No function yet!
    uicontrol(f.Main_Win.uibuttongroup_input_PV_type,...
    'style',            'pushbutton',...
    'Units',            'normalized',...
    'Position',         [0.02 0.1 0.28 0.35],...
    'String',           'Choose File',...
    'Enable',           'on',...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'FontSize',         12....
    );

f.Main_Win.edit_DB_PV_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_type,...
    'style',            'edit',...
    'Units',            'normalized',...
    'Position',         [0.32 0.1 0.66 0.35],...
    'String',           [f.Inputs.PV_DB_Path, 'IEEE_PV_Profiles.mat'],...
    'Enable',           'on',...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'FontSize',         12....
    );

f.Main_Win.uibuttongroup_input_PV_dist = ...
    uibuttongroup(...
    'Units',            'normalized',...
    'Position',         [0.03 0.15 0.44 0.12],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select PV distribution',...
    'FontUnits',        'pixels',...
    'FontSize',         12,...
    'TitlePosition',    'centertop'...
    );

f.Main_Win.radiobutton_input_dist_PV_list = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.7 0.3 0.2],...
    'String',       'Dist. List',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_dist_PV_random = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.22 0.7 0.3 0.2],...
    'String',       'Random',...
    'FontUnits',    'pixels',...
    'Value',        1, ... 
    'FontSize',     12....
    );

f.Main_Win.radiobutton_input_dist_PV_manual = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_dist,...
    'style',        'radiobutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.42 0.7 0.3 0.2],...
    'String',       'Manual',...
    'Enable',       'off',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.pushbutton_dist_list_PV_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_dist,...
    'style',            'pushbutton',...
    'Units',            'normalized',...
    'Position',         [0.02 0.1 0.28 0.35],...
    'String',           'Choose File',...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'off',...
    'FontSize',         12....
    );

f.Main_Win.edit_dist_list_PV_path = ...
    uicontrol(f.Main_Win.uibuttongroup_input_PV_dist,...
    'style',            'edit',...
    'Units',            'normalized',...
    'Position',         [0.32 0.1 0.66 0.35],...
    'String',           f.Inputs.PV_dist_path,...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'Enable',           'off',...
    'FontSize',         12....
    );

%% General input

f.Main_Win.uipanel_general = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.02 0.02 0.46 0.11],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'General',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.text_VerSincal = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'text',...
    'Units',                'normalized',...
    'Position',             [0.02 0.54 0.66 0.35],...
    'String',               'Sincal Version:',...
    'Backgroundcolor',      f.Main_Win.figure.Color,...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12....
    );

% Check Sincal Version and corresponding 'Sinca.Simulation' connection
max_Version_Sincal  = 14;
max_Version_Mat2Sin = 11;
VersionInstalled = false;
while ~VersionInstalled
    try
        actxserver(['Sincal.Simulation.',num2str(max_Version_Mat2Sin)]);
        VersionInstalled = true;
        clear ans
    catch
        max_Version_Sincal  = max_Version_Sincal  - 0.5  ;
        max_Version_Mat2Sin = max_Version_Mat2Sin - 1;
    end
end
    
f.Main_Win.edit_VerSincal = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'edit',...
    'Units',                'normalized',...
    'Position',             [0.27 0.60 0.08 0.35],...
    'String',               num2str(max_Version_Sincal),...
    'Backgroundcolor',      [1 1 1],...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12....
    );

f.Main_Win.text_NumelTimestep = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'text',...
    'Units',                'normalized',...
    'Position',             [0.39 0.54 0.66 0.35],...
    'String',               'No. Timestep:',...
    'Backgroundcolor',      f.Main_Win.figure.Color,...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12....
    );

f.Main_Win.edit_NumelTimestep = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'edit',...
    'Units',                'normalized',...
    'Position',             [0.57 0.60 0.12 0.35],...
    'String',               'max',...
    'Backgroundcolor',      [1 1 1],...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'Enable',               'off',...
    'FontSize',             12....
    );

f.Main_Win.text_ParrallelCom = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'text',...
    'Units',                'normalized',...
    'Position',             [0.02 0.10 0.66 0.35],...
    'String',               'Parallel computing:',...
    'Backgroundcolor',      f.Main_Win.figure.Color,...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12....
    );

f.Main_Win.popupmenu_ParrallelCom = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',            'popupmenu',...
    'Units',            'normalized',...
    'Position',         [0.27 0.05 0.10 0.45],...
    'String',           {'Yes','No'},...
    'Value',            1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'FontSize',         12....
    );

% Check number of posible Cores
myCluster = parcluster('local');
max_num_Workers = myCluster.NumWorkers;

f.Main_Win.text_NumelCores = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'text',...
    'Units',                'normalized',...
    'Position',             [0.39 0.10 0.66 0.35],...
    'String',               'No. Cores:',...
    'Backgroundcolor',      f.Main_Win.figure.Color,...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12....
    );

f.Main_Win.popupmenu_NumelCores = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',            'popupmenu',...
    'Units',            'normalized',...
    'Position',         [0.57 0.05 0.09 0.45],...
    'String',           {1:max_num_Workers},...
    'Value',            max_num_Workers - 1,...
    'BackgroundColor',  [1 1 1],...
    'FontUnits',        'pixels',...
    'FontSize',         12....
    );

f.Main_Win.text_NumelCores_max = ...
    uicontrol(f.Main_Win.uipanel_general,...
    'style',                'text',...
    'Units',                'normalized',...
    'Position',             [0.67 0.10 0.66 0.35],...
    'String',               ['max (',num2str(max_num_Workers),')'],...
    'Backgroundcolor',      f.Main_Win.figure.Color,...
    'HorizontalAlignment',  'left',...
    'FontUnits',            'pixels',...
    'FontSize',             12, ...
    'FontAngle',           'italic' ...
    );

%% Output data panel

f.Main_Win.uipanel_output = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.51 0.33 0.48 0.58],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Output data',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'centertop'...
    );

f.Main_Win.checkbox_output_active = ...
    uicontrol(f.Main_Win.uipanel_output,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.9 0.35 0.1],...
    'String',       'Activate Output',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_raw_only = ...
    uicontrol(f.Main_Win.uipanel_output,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.3 0.9 0.45 0.1],...
    'String',       'Output RAW data only (faster)',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       0....
    );

f.Main_Win.checkbox_output_raw = ...
    uicontrol(f.Main_Win.uipanel_output,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.70 0.9 0.45 0.1],...
    'String',       'RAW data',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       0....
    );

f.Main_Win.checkbox_output_data_selection_delete_temp_files = ...
    uicontrol(f.Main_Win.uipanel_output,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.82 0.45 0.1],...
    'String',       'Delete temp files',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.pushbutton_generate_output = ...
    uicontrol(f.Main_Win.uipanel_output,...
    'style',        'pushbutton',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.74 0.28 0.06],...
    'String',       'Generate Output Only',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       0....
    );

%% Output data select output data panel

f.Main_Win.uipanel_output_data_selection = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.52 0.55 0.46 0.18],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select output data',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.checkbox_output_data_selection_U = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.7 0.1 0.2],...
    'String',       'U',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );


f.Main_Win.checkbox_output_data_selection_P = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.13 0.7 0.1 0.2],...
    'String',       'P',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_Q = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.24 0.7 0.1 0.2],...
    'String',       'Q',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_S = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.35 0.7 0.1 0.2],...
    'String',       'S',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_Phi = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.46 0.7 0.1 0.2],...
    'String',       'Phi',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_Sin_Info = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.7 0.7 0.3 0.2],...
    'String',       'SinInfo',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_I = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.45 0.1 0.2],...
    'String',       'I',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_P_flow = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.13 0.45 0.2 0.2],...
    'String',       'P_flow',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_Q_flow = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.28 0.45 0.2 0.2],...
    'String',       'Q_flow',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );
f.Main_Win.checkbox_output_data_selection_S_flow = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.43 0.45 0.2 0.2],...
    'String',       'S_flow',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_T_Vector = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.7 0.45 0.3 0.2],...
    'String',       'TimeVector',...
    'FontUnits',    'pixels',...
    'FontSize',     12, ...
    'value',        0, ...
    'Enable',       'off' ...
    );

f.Main_Win.checkbox_output_data_selection_per_unit = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.02 0.18 0.4 0.2],...
    'String',       'Results per Unit',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

f.Main_Win.checkbox_output_data_selection_per_node_branch = ...
    uicontrol(f.Main_Win.uipanel_output_data_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Position',     [0.30 0.18 0.6 0.2],...
    'String',       'Results per Node/Branch',...
    'FontUnits',    'pixels',...
    'FontSize',     12.,...
    'value',       1....
    );

%% Output data select output path panel

f.Main_Win.uipanel_output_path_selection = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.52 0.35 0.46 0.2],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Select output path',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'lefttop'...
    );

f.Main_Win.text_output_path_selection = ...
    uicontrol(f.Main_Win.uipanel_output_path_selection,...
    'style',            'text',...
    'Units',            'normalized',...
    'Position',         [0.02 0.60 0.96 0.15],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',           f.Inputs.Outputs_Path,...
    'Value',            1,...
    'FontUnits',        'pixels',...
    'HorizontalAlignment','left',...
    'FontSize',         12....
    );

f.Main_Win.pushbutton_output_path_selection = ...
    uicontrol(f.Main_Win.uipanel_output_path_selection,...
    'style',        'pushbutton',...
    'Units',        'normalized',...
    'Position',     [0.02 0.78 0.3 0.18],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',       'Change Folder',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

f.Main_Win.checkbox_output_path_filename = ...
    uicontrol(f.Main_Win.uipanel_output_path_selection,...
    'style',        'checkbox',...
    'Units',        'normalized',...
    'Position',     [0.02 0.4 0.3 0.15],...
    'String',       'Default filename',...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'FontUnits',    'pixels',...
    'value',         1,...
    'FontSize',     12....
    );

f.Main_Win.edit_output_path_filename = ...
    uicontrol(f.Main_Win.uipanel_output_path_selection,...
    'style',        'edit',...
    'Units',        'normalized',...
    'Position',     [0.02 0.15 0.96 0.18],...
    'Backgroundcolor',  [1 1 1],...
    'String',       'Default filename',...
    'Enable',       'off',...
    'HorizontalAlignment','left',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

%% Output data power flow control panel

f.Main_Win.uipanel_control = ...
    uipanel(...
    'Units',            'normalized',...
    'Position',         [0.51 0.01 0.48 0.27],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'Title',            'Power Flow control',...
    'FontUnits',        'pixels',...
    'FontSize',         15,...
    'FontWeight',       'bold',... 
    'TitlePosition',    'centertop'...
    );

f.Main_Win.pushbutton_start_PF = ...
    uicontrol(f.Main_Win.uipanel_control,...
    'style',        'pushbutton',...
    'Units',        'normalized',...
    'Position',     [0.3 0.7 0.4 0.2],...
    'Backgroundcolor',  f.Main_Win.figure.Color,...
    'String',       'Start Power Flow calculation',...
    'FontUnits',    'pixels',...
    'FontSize',     12....
    );

%% Fill popup menu with content

% Set_GridSelection_popup(f);
f.Inputs.Grid_List = struct2table(dir(f.Inputs.Grid_Path));
[~,~,ext] = cellfun(@fileparts,f.Inputs.Grid_List.name,'UniformOutput',false);
f.Inputs.Grid_List.extension = ext;
f.Inputs.Grid_List = f.Inputs.Grid_List.name(~f.Inputs.Grid_List.isdir & strcmp(f.Inputs.Grid_List.extension,'.sin'));
% f.Inputs.Grid_List = f.Inputs.Grid_List.name(~f.Inputs.Grid_List.isdir);

f.Inputs.Grid_List = strrep(f.Inputs.Grid_List,'.sin','');
% f.Main_Win.popupmenu_grid_selection.String = [f.Main_Win.popupmenu_grid_selection.String;f.Inputs.Grid_List];
if size(f.Inputs.Grid_List,1) == 0
    f.Main_Win.popupmenu_grid_selection.Value  = 1;
    f.Main_Win.popupmenu_grid_selection.String = 'Current path contents no Sincal grids';
    f.Main_Win.popupmenu_grid_selection.Enable = 'off';
else
%     f.Main_Win.popupmenu_grid_selection.Value = size(f.Inputs.Grid_List,1);
    f.Main_Win.popupmenu_grid_selection.Value  = 1;
    f.Main_Win.popupmenu_grid_selection.String = f.Inputs.Grid_List;
    f.Main_Win.popupmenu_grid_selection.Enable = 'on';
    if  f.Main_Win.checkbox_output_path_filename.Value == 1
            Name = f.Main_Win.popupmenu_grid_selection.String{f.Main_Win.popupmenu_grid_selection.Value};
            if strcmp(Name(end-5:end),'_empty')
                f.Main_Win.edit_output_path_filename.String = Name(1:end-6);
            else
                f.Main_Win.edit_output_path_filename.String = Name;
            end
    end
end

f.Main_Win.edit_generate_output_select_path.String = [f.Main_Win.text_output_path_selection.String,...
        f.Main_Win.edit_output_path_filename.String];
    
f.Main_Win.figure.Visible = 'on';

%% Definition of callback functions

% Callbacks for Grid selection
set(f.Main_Win.pushbutton_grid_path,                'Callback',{@SelectGridPath,f});
set(f.Main_Win.popupmenu_grid_selection,            'Callback',{@SelectGrid,f});
%Callbacks for Load Profil type and database selection
set(f.Main_Win.radiobutton_input_LP_AAPD,           'Callback',{@SelectLP_type,f});
set(f.Main_Win.radiobutton_input_LP_LZR_Tool,       'Callback',{@SelectLP_type,f});
set(f.Main_Win.radiobutton_input_LP_DB,             'Callback',{@SelectLP_type,f});
set(f.Main_Win.pushbutton_DB_LP_path,               'Callback',{@SelectLP_DB,f});
% Callbacks for radiobuttons LP distrubution
set(f.Main_Win.radiobutton_input_dist_LP_list,      'Callback',{@SelectLP_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_LP_sort,      'Callback',{@SelectLP_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_LP_mean,      'Callback',{@SelectLP_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_LP_random,    'Callback',{@SelectLP_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_LP_manual,    'Callback',{@SelectLP_dist_type,f});
% Callbacks for PV Profile type and database selecetion
set(f.Main_Win.radiobutton_input_PV_LZR_Tool,       'Callback',{@SelectPV_type,f});
set(f.Main_Win.radiobutton_input_PV_DB,             'Callback',{@SelectPV_type,f});
set(f.Main_Win.pushbutton_DB_PV_path,               'Callback',{@SelectPV_DB,f});
% Callbacks for radiobuttons PV distrubution
set(f.Main_Win.radiobutton_input_dist_PV_list,      'Callback',{@SelectPV_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_PV_random,    'Callback',{@SelectPV_dist_type,f});
set(f.Main_Win.radiobutton_input_dist_PV_manual,    'Callback',{@SelectPV_dist_type,f});
set(f.Main_Win.pushbutton_dist_list_LP_path,        'Callback',{@SelectLP_dist_list,f});
set(f.Main_Win.edit_dist_list_LP_path,              'Callback',{@SelectLP_dist_list,f});
set(f.Main_Win.pushbutton_dist_list_PV_path,        'Callback',{@SelectPV_dist_list,f});
set(f.Main_Win.edit_dist_list_PV_path,              'Callback',{@SelectPV_dist_list,f});
set(f.Main_Win.pushbutton_output_path_selection,	'Callback',{@Select_Output_Path,f});
set(f.Main_Win.checkbox_output_path_filename,       'Callback',{@Set_Output_filename,f});
set(f.Main_Win.pushbutton_generate_output,          'Callback',{@Generate_Output,f});
% set(f.Main_Win.pushbutton_generate_output_select_path,'Callback',{@Generate_Output_select_F,f});
% set(f.Main_Win.edit_generate_output_select_path,'Callback',{@Generate_Output_select_F,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% set(,'Callback',{@,f});
% Set checkboxes options for Simulation
set(f.Main_Win.checkbox_output_active,              'Callback',{@SetOutputActive,f});
set(f.Main_Win.checkbox_output_raw_only,            'Callback',{@SetOutputRaw,f});
% set(f.Main_Win.checkbox_output_data_selection_U,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_P,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_Q,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_S,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_I,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_P_flow,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_Q_flow,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_S_flow,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_delete_temp_files,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_per_node_branch,'Callback',{@SetOutputOption,f});
% set(f.Main_Win.checkbox_output_data_selection_per_unit,'Callback',{@SetOutputOption,f});
set(f.Main_Win.popupmenu_ParrallelCom,'Callback',{@SelectParrallelCom,f});


%Simulation Start
set(f.Main_Win.pushbutton_start_PF,'Callback',{@Start_Simulation,f});

end

%% Body of callback functions

%% Callback SetOutputActive
% Enable/Disable some checkboxes in Output data
function SetOutputActive(~,~,f)
if f.Main_Win.checkbox_output_active.Value == 0
    f.Main_Win.checkbox_output_raw.Enable                               = 'off';
    f.Main_Win.checkbox_output_raw_only.Enable                          = 'off';
    f.Main_Win.checkbox_output_data_selection_U.Enable                  = 'off';
    f.Main_Win.checkbox_output_data_selection_P.Enable                  = 'off';
    f.Main_Win.checkbox_output_data_selection_Q.Enable                  = 'off';
    f.Main_Win.checkbox_output_data_selection_S.Enable                  = 'off';
    f.Main_Win.checkbox_output_data_selection_Phi.Enable                = 'off';
    f.Main_Win.checkbox_output_data_selection_I.Enable                  = 'off';
    f.Main_Win.checkbox_output_data_selection_P_flow.Enable             = 'off';
    f.Main_Win.checkbox_output_data_selection_Q_flow.Enable             = 'off';
    f.Main_Win.checkbox_output_data_selection_S_flow.Enable             = 'off';
%     f.Main_Win.checkbox_output_data_selection_delete_temp_files.Enable  = 'off';
    f.Main_Win.checkbox_output_data_selection_per_node_branch.Enable    = 'off';
    f.Main_Win.checkbox_output_data_selection_per_unit.Enable           = 'off';
    f.Main_Win.checkbox_output_data_selection_Sin_Info.Enable           = 'off';
    f.Main_Win.checkbox_output_data_selection_T_Vector.Enable           = 'off';
%     f.Main_Win.radiobutton_generate_nodes.Enable                        = 'off';
%     f.Main_Win.radiobutton_generate_branches.Enable                     = 'off';
%     f.Main_Win.radiobutton_generate_nodes_and_branches.Enable           = 'off';
%     f.Main_Win.pushbutton_generate_output.Enable                        = 'off';
%     f.Main_Win.pushbutton_generate_output_select_path.Enable            = 'off';
%     f.Main_Win.edit_generate_output_select_path.Enable                  = 'off';
else
    f.Main_Win.checkbox_output_raw_only.Enable                          = 'on';
    f.Main_Win.checkbox_output_data_selection_U.Enable                  = 'on';
    f.Main_Win.checkbox_output_data_selection_P.Enable                  = 'on';
    f.Main_Win.checkbox_output_data_selection_Q.Enable                  = 'on';
    f.Main_Win.checkbox_output_data_selection_S.Enable                  = 'on';
    f.Main_Win.checkbox_output_data_selection_Phi.Enable                = 'on';
    f.Main_Win.checkbox_output_data_selection_I.Enable                  = 'on';
    f.Main_Win.checkbox_output_data_selection_P_flow.Enable             = 'on';
    f.Main_Win.checkbox_output_data_selection_Q_flow.Enable             = 'on';
    f.Main_Win.checkbox_output_data_selection_S_flow.Enable             = 'on';
%     f.Main_Win.checkbox_output_data_selection_delete_temp_files.Enable  = 'on';
    f.Main_Win.checkbox_output_data_selection_Sin_Info.Enable           = 'on';
    f.Main_Win.checkbox_output_data_selection_T_Vector.Enable           = 'on';
%     f.Main_Win.radiobutton_generate_nodes.Enable                        = 'on';
%     f.Main_Win.radiobutton_generate_branches.Enable                     = 'on';
%     f.Main_Win.radiobutton_generate_nodes_and_branches.Enable           = 'on';
%     f.Main_Win.pushbutton_generate_output.Enable                        = 'on';
%     f.Main_Win.pushbutton_generate_output_select_path.Enable            = 'on';
%     f.Main_Win.edit_generate_output_select_path.Enable                  = 'on';
    if f.Main_Win.checkbox_output_raw_only.Value == 0
        f.Main_Win.checkbox_output_data_selection_per_node_branch.Enable    = 'on';
        f.Main_Win.checkbox_output_data_selection_per_unit.Enable           = 'on';
        f.Main_Win.checkbox_output_raw.Enable                               = 'on';
    else
        f.Main_Win.checkbox_output_data_selection_per_node_branch.Enable    = 'off';
        f.Main_Win.checkbox_output_data_selection_per_unit.Enable           = 'off';
        f.Main_Win.checkbox_output_raw.Enable                               = 'off';
    end
end
end

%% Callback SetOutputRaw
% Enable/Disable some checkboxes in Output data
function SetOutputRaw(~,~,f)
if f.Main_Win.checkbox_output_raw_only.Value == 1
%     f.Main_Win.checkbox_output_data_selection_U.Enable                  = 'off';
%     f.Main_Win.checkbox_output_data_selection_P.Enable                  = 'off';
%     f.Main_Win.checkbox_output_data_selection_Q.Enable                  = 'off';
%     f.Main_Win.checkbox_output_data_selection_S.Enable                  = 'off';
%     f.Main_Win.checkbox_output_data_selection_Phi.Enable                = 'off';
%     f.Main_Win.checkbox_output_data_selection_I.Enable                  = 'off';
%     f.Main_Win.checkbox_output_data_selection_P_flow.Enable             = 'off';
%     f.Main_Win.checkbox_output_data_selection_Q_flow.Enable             = 'off';
%     f.Main_Win.checkbox_output_data_selection_S_flow.Enable             = 'off';
%     f.Main_Win.checkbox_output_data_selection_delete_temp_files.Enable  = 'off';
    f.Main_Win.checkbox_output_data_selection_per_node_branch.Enable    = 'off';
    f.Main_Win.checkbox_output_data_selection_per_unit.Enable           = 'off';
    f.Main_Win.checkbox_output_raw.Enable                               = 'off';
%     f.Main_Win.pushbutton_generate_output.String                        = 'Generate RAW only';
%     f.Main_Win.checkbox_output_data_selection_Sin_Info.Enable           = 'off';
%     f.Main_Win.checkbox_output_data_selection_T_Vector.Enable           = 'off';
else
%     f.Main_Win.checkbox_output_data_selection_U.Enable                  = 'on';
%     f.Main_Win.checkbox_output_data_selection_P.Enable                  = 'on';
%     f.Main_Win.checkbox_output_data_selection_Q.Enable                  = 'on';
%     f.Main_Win.checkbox_output_data_selection_S.Enable                  = 'on';
%     f.Main_Win.checkbox_output_data_selection_Phi.Enable                = 'on';
%     f.Main_Win.checkbox_output_data_selection_I.Enable                  = 'on';
%     f.Main_Win.checkbox_output_data_selection_P_flow.Enable             = 'on';
%     f.Main_Win.checkbox_output_data_selection_Q_flow.Enable             = 'on';
%     f.Main_Win.checkbox_output_data_selection_S_flow.Enable             = 'on';
%     f.Main_Win.checkbox_output_data_selection_delete_temp_files.Enable  = 'on';
    f.Main_Win.checkbox_output_data_selection_per_node_branch.Enable    = 'on';
    f.Main_Win.checkbox_output_data_selection_per_unit.Enable           = 'on';
    f.Main_Win.checkbox_output_raw.Enable                               = 'on';
%     f.Main_Win.pushbutton_generate_output.String                        = 'Generate Output only';
%     f.Main_Win.checkbox_output_data_selection_Sin_Info.Enable           = 'on';
%     f.Main_Win.checkbox_output_data_selection_T_Vector.Enable           = 'on';
end
end

%% Callback SelectGridPath
% Change path for grid selection and find out what grids occure in path
function SelectGridPath(~,~,f)
Grid_Path = uigetdir(f.Main_Win.text_grid_path.String);
if Grid_Path ~= 0
    if Grid_Path(end)~='\'
        Grid_Path = [Grid_Path,'\'];
    end
    f.Inputs.Grid_Path = Grid_Path;
    f.Main_Win.text_grid_path.String = f.Inputs.Grid_Path;
    f.Inputs.Grid_List = struct2table(dir(f.Inputs.Grid_Path));
    [~,~,ext] = cellfun(@fileparts,f.Inputs.Grid_List.name,'UniformOutput',false);
    f.Inputs.Grid_List.extension = ext;
    f.Inputs.Grid_List = f.Inputs.Grid_List.name(~f.Inputs.Grid_List.isdir & strcmp(f.Inputs.Grid_List.extension,'.sin'));
%     f.Inputs.Grid_List = f.Inputs.Grid_List.name(~f.Inputs.Grid_List.isdir);
    f.Inputs.Grid_List = strrep(f.Inputs.Grid_List,'.sin','');
%     f.Main_Win.popupmenu_grid_selection.String = [f.Main_Win.popupmenu_grid_selection.String;f.Inputs.Grid_List];
    if size(f.Inputs.Grid_List,1) == 0
        f.Main_Win.popupmenu_grid_selection.Value = 1;
        f.Main_Win.popupmenu_grid_selection.String = 'Current path contents no Sincal grids';
        f.Main_Win.popupmenu_grid_selection.Enable = 'off';
    else
%         f.Main_Win.popupmenu_grid_selection.Value = size(f.Inputs.Grid_List,1);
        f.Main_Win.popupmenu_grid_selection.Value = 1;
        f.Main_Win.popupmenu_grid_selection.String = f.Inputs.Grid_List;
        f.Main_Win.popupmenu_grid_selection.Enable = 'on';
        if  f.Main_Win.checkbox_output_path_filename.Value == 1
            Name = f.Main_Win.popupmenu_grid_selection.String{f.Main_Win.popupmenu_grid_selection.Value};
            if strcmp(Name(end-5:end),'_empty')
                f.Main_Win.edit_output_path_filename.String = Name(1:end-6);
            else
                f.Main_Win.edit_output_path_filename.String = Name;
            end
        end
    end
end
end

%% Callback SelectGrid
% Change default output filename if corresponding checkbox on
function SelectGrid(~,~,f)
if  f.Main_Win.checkbox_output_path_filename.Value == 1
    Name = f.Main_Win.popupmenu_grid_selection.String{f.Main_Win.popupmenu_grid_selection.Value};
    if strcmp(Name(end-5:end),'_empty')
        f.Main_Win.edit_output_path_filename.String = Name(1:end-6);
    else
        f.Main_Win.edit_output_path_filename.String = Name;
    end
end
end

%% Callback SelectLP_type
% Only if the radiobutton "Database" is clicked allow changing the LP type file
function SelectLP_type(~,~,f)
if f.Main_Win.radiobutton_input_LP_DB.Value == 1
    f.Main_Win.pushbutton_DB_LP_path.Enable     = 'on';
    f.Main_Win.edit_DB_LP_path.Enable           = 'on';
elseif f.Main_Win.radiobutton_input_LP_AAPD.Value == 1
    f.Main_Win.pushbutton_DB_LP_path.Enable     = 'off';
    f.Main_Win.edit_DB_LP_path.Enable           = 'off';
elseif f.Main_Win.radiobutton_input_LP_LZR_Tool.Value == 1
    f.Main_Win.pushbutton_DB_LP_path.Enable     = 'off';
    f.Main_Win.edit_DB_LP_path.Enable           = 'off';
end
end

%% Callback SelectLP_DB
% Change the LP type file
function SelectLP_DB(~,~,f)
[filename,path,~] = uigetfile('*.mat','Select load profiles database',f.Inputs.LP_DB_Path);
    if filename ~= 0
        f.Main_Win.edit_DB_LP_path.String = [path,filename];
    end
end

%% Callback SelectLP_dist_type
% Only if the radiobutton "Distribution List" or "Mean P" is clicked allow changing the LP distribution file
function SelectLP_dist_type(~,~,f)
if f.Main_Win.radiobutton_input_dist_LP_list.Value == 1 || f.Main_Win.radiobutton_input_dist_LP_mean.Value == 1
    f.Main_Win.edit_dist_list_LP_path.Enable        = 'on';
    f.Main_Win.pushbutton_dist_list_LP_path.Enable  = 'on';
else
    f.Main_Win.edit_dist_list_LP_path.Enable        = 'off';
    f.Main_Win.pushbutton_dist_list_LP_path.Enable  = 'off';
end
end

%% Callback SelectLP_dist_list
% Change the LP distribution file
function SelectLP_dist_list(trigger_h,~,f)
if trigger_h == f.Main_Win.pushbutton_dist_list_LP_path
    [filename, path, ~] = uigetfile('*.txt','Select Load distribution list',f.Inputs.LP_dist_path);
    if filename ~= 0
        f.Main_Win.edit_dist_list_LP_path.String = [path, filename];
    else
        fprintf('No Load Profile distribution list was chosen.\n');
    end
end
end

%% Callback SelectPV_type
% Only if the radiobutton "Database" is clicked allow changing the PV type file
function SelectPV_type(~,~,f)
if f.Main_Win.radiobutton_input_PV_DB.Value == 1
    f.Main_Win.pushbutton_DB_PV_path.Enable     = 'on';
    f.Main_Win.edit_DB_PV_path.Enable           = 'on';
elseif f.Main_Win.radiobutton_input_PV_LZR_Tool.Value == 1
    f.Main_Win.pushbutton_DB_PV_path.Enable     = 'off';
    f.Main_Win.edit_DB_PV_path.Enable           = 'off';
end
end

%% Callback SelectPV_DB
% Change the PV type file
function SelectPV_DB(~,~,f)
[filename,path,~] = uigetfile('*.mat','Select PV profiles database', f.Inputs.PV_DB_Path);
    if filename ~= 0
        f.Main_Win.edit_DB_PV_path.String = [path,filename];
    end
end

%% Callback SelectPV_dist_type
% Only if the radiobutton "Distribution List" is clicked allow changing the LP distribution file
function SelectPV_dist_type(~,~,f)
if f.Main_Win.radiobutton_input_dist_PV_list.Value == 1
    f.Main_Win.edit_dist_list_PV_path.Enable        = 'on';
    f.Main_Win.pushbutton_dist_list_PV_path.Enable  = 'on';
else
    f.Main_Win.edit_dist_list_PV_path.Enable        = 'off';
    f.Main_Win.pushbutton_dist_list_PV_path.Enable  = 'off';
end
end

%% Callback SelectPV_dist_list
% Change the PV distribution file
function SelectPV_dist_list(trigger_h,~,f)
if trigger_h == f.Main_Win.pushbutton_dist_list_PV_path
    [filename,path,~] = uigetfile('*.txt','Select PV distribution list',[f.Inputs.PV_dist_path,...
        f.Inputs.PV_dist_list_name]);
    if filename ~= 0
        f.Main_Win.edit_dist_list_PV_path.String = [path,filename];
    end
elseif trigger_h == f.Main_Win.edit_dist_list_PV_path
%     [path,name,ext] = fileparts(f.Main_Win.edit_dist_list_PV_path.String); 
end
end

%% Callback Select_Output_Path
% Change output path
function Select_Output_Path(~,~,f)
Output_Path = uigetdir(f.Main_Win.text_output_path_selection.String);
if Output_Path ~= 0
    if Output_Path(end)~='\'
        Output_Path = [Output_Path,'\'];
    end
    f.Main_Win.text_output_path_selection.String = Output_Path;
end
end

%% Callback Set_Output_filename
% Set or turn off default filename. If turn off any name can be set.
function Set_Output_filename(~,~,f)
if f.Main_Win.checkbox_output_path_filename.Value == 0
    f.Main_Win.edit_output_path_filename.Enable = 'on';
else
     f.Main_Win.edit_output_path_filename.Enable = 'off';
     Name = f.Main_Win.popupmenu_grid_selection.String{f.Main_Win.popupmenu_grid_selection.Value};
     if strcmp(Name(end-5:end),'_empty')
        f.Main_Win.edit_output_path_filename.String = Name(1:end-6);
     else
        f.Main_Win.edit_output_path_filename.String = Name;
     end
end
end

%% Callback Generate_Output
% Open new GUI for defining the output files from the power flow results
function Generate_Output(~,~,f)
LPC_Tool_GUI_Output(f);
% if f.Main_Win.checkbox_output_raw_only.Value == 1
%     
% elseif f.Main_Win.checkbox_output_raw_only.Value == 0
%     [path,filename,ext] = fileparts(f.Main_Win.edit_output_path_filename.String);
%     if path(end) ~= '\'
%         Temp_Path = [path,'\'];
%     else
%         Temp_Path = path;
%     end
%     fn = [filename,ext];
%     if exist([Temp_Path,],'file')
%         
%     end
% 
% end
end

%% Callback SelectParrallelCom
function SelectParrallelCom(~,~,f)
if f.Main_Win.popupmenu_ParrallelCom.Value == 2     % If No Parrallel Com
    f.Main_Win.popupmenu_NumelCores.Value  = 1;
    f.Main_Win.popupmenu_NumelCores.Enable = 'off';
else
    f.Main_Win.popupmenu_NumelCores.Enable = 'on';
end
end

%% Callback Start_Simulation
% Start the simulation
function Start_Simulation(~,~,f)
% Set all parameters for simulation
f.Inputs.Grid_Path = f.Main_Win.text_grid_path.String;
f.Inputs.Grid_Name = f.Main_Win.popupmenu_grid_selection.String{f.Main_Win.popupmenu_grid_selection.Value};

% Set output options
f.Inputs.Output_option_preparation      = logical(f.Main_Win.checkbox_output_active.Value                           );
f.Inputs.Output_option_raw              = logical(f.Main_Win.checkbox_output_raw.Value                              );
f.Inputs.Output_option_raw_only         = logical(f.Main_Win.checkbox_output_raw_only.Value                         );
f.Inputs.Output_option_del_temp_files   = logical(f.Main_Win.checkbox_output_data_selection_delete_temp_files.Value );
f.Inputs.Output_option_per_node_branch  = logical(f.Main_Win.checkbox_output_data_selection_per_node_branch.Value   );
f.Inputs.Output_option_per_unit         = logical(f.Main_Win.checkbox_output_data_selection_per_unit.Value          );
f.Inputs.Output_option_Sin_Info         = logical(f.Main_Win.checkbox_output_data_selection_Sin_Info.Value          );
f.Inputs.Output_option_T_vector         = logical(f.Main_Win.checkbox_output_data_selection_T_Vector.Value          );
f.Inputs.Output_option_U                = logical(f.Main_Win.checkbox_output_data_selection_U.Value                 );
f.Inputs.Output_option_P                = logical(f.Main_Win.checkbox_output_data_selection_P.Value                 );
f.Inputs.Output_option_Q                = logical(f.Main_Win.checkbox_output_data_selection_Q.Value                 );
f.Inputs.Output_option_S                = logical(f.Main_Win.checkbox_output_data_selection_S.Value                 );
f.Inputs.Output_option_phi              = logical(f.Main_Win.checkbox_output_data_selection_Phi.Value               );
f.Inputs.Output_option_I                = logical(f.Main_Win.checkbox_output_data_selection_I.Value                 );
f.Inputs.Output_option_P_flow           = logical(f.Main_Win.checkbox_output_data_selection_P_flow.Value            );
f.Inputs.Output_option_Q_flow           = logical(f.Main_Win.checkbox_output_data_selection_Q_flow.Value            );
f.Inputs.Output_option_S_flow           = logical(f.Main_Win.checkbox_output_data_selection_S_flow.Value            );

% Set load profiles type
if     f.Main_Win.radiobutton_input_LP_DB  	   .Value == 1; f.Inputs.LP_Type = 'DB'      ;
elseif f.Main_Win.radiobutton_input_LP_LZR_Tool.Value == 1; f.Inputs.LP_Type = 'LZR_Tool';
elseif f.Main_Win.radiobutton_input_LP_AAPD    .Value == 1; f.Inputs.LP_Type = 'AAPD'    ;
end

% Set distribution type for load profiles
if     f.Main_Win.radiobutton_input_dist_LP_list  .Value == 1; f.Inputs.LP_dist_type = 'list'  ;
elseif f.Main_Win.radiobutton_input_dist_LP_random.Value == 1; f.Inputs.LP_dist_type = 'random';
elseif f.Main_Win.radiobutton_input_dist_LP_manual.Value == 1; f.Inputs.LP_dist_type = 'manual';
elseif f.Main_Win.radiobutton_input_dist_LP_sort  .Value == 1; f.Inputs.LP_dist_type = 'alphab';
elseif f.Main_Win.radiobutton_input_dist_LP_mean  .Value == 1; f.Inputs.LP_dist_type = 'mean_P';
end

% Set PV profiles type
if     f.Main_Win.radiobutton_input_PV_DB      .Value == 1; f.Inputs.PV_Type = 'DB'      ;
elseif f.Main_Win.radiobutton_input_PV_LZR_Tool.Value == 1; f.Inputs.PV_Type = 'LZR_Tool';
end

% Set distribution type for PV profiles
if     f.Main_Win.radiobutton_input_dist_PV_list  .Value == 1; f.Inputs.PV_dist_type = 'list'  ;
elseif f.Main_Win.radiobutton_input_dist_PV_random.Value == 1; f.Inputs.PV_dist_type = 'random';
elseif f.Main_Win.radiobutton_input_dist_PV_manual.Value == 1; f.Inputs.PV_dist_type = 'manual';
end

% Set path and filename for load profiles database
if f.Main_Win.radiobutton_input_LP_DB.Value == 1
    [path, filename, ext] = fileparts(f.Main_Win.edit_DB_LP_path.String);
    if path(end) ~= '\'; path = [path,'\']; end
    f.Inputs.LP_DB_Path = path;
    f.Inputs.LP_DB_Name = [filename, ext];
end

% Set path and filename for PV profiles database
if f.Main_Win.radiobutton_input_PV_DB.Value == 1
    [path, filename, ext] = fileparts(f.Main_Win.edit_DB_PV_path.String);
    if path(end) ~= '\'; path = [path,'\']; end
    f.Inputs.PV_DB_Path = path;
    f.Inputs.PV_DB_Name = [filename, ext];
end

% Set path and filename for load distribution list
if f.Main_Win.radiobutton_input_dist_LP_list.Value == 1
    [path, filename, ext] = fileparts(f.Main_Win.edit_dist_list_LP_path.String);
    if path(end) ~= '\'; path = [path,'\']; end
    f.Inputs.LP_dist_path      = path;
    f.Inputs.LP_dist_list_name = [filename, ext];
end

% Set path and filename for PV distribution list
if f.Main_Win.radiobutton_input_dist_PV_list.Value == 1
    [path, filename, ext] = fileparts(f.Main_Win.edit_dist_list_PV_path.String);
    if path(end) ~= '\'; path = [path,'\']; end
    f.Inputs.PV_dist_path      = path;
    f.Inputs.PV_dist_list_name = [filename, ext];
end

% Set Output path and filename
f.Inputs.Output_Path = f.Main_Win.text_output_path_selection.String;
if  f.Main_Win.checkbox_output_path_filename.Value == 0
    f.Inputs.Output_Name = f.Main_Win.edit_output_path_filename.String;
end

% Starting simulation with parameters
Mat2Sin_LPCalc(f);

end